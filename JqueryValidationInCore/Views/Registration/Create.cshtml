@model RegistrationModel

<style>
    .error {
        color: red;
        font-style: italic;
    }
</style>

<script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
<h1>User Registration Form in asp.net core mvc application</h1>
<hr />

<div class="row">
    <div class="col-md-9">
        <form asp-action="Create" name="Registration">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="userName" class="control-label"></label>
                <input asp-for="userName" class="form-control" />
                @*<span asp-validation-for="userName" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <label asp-for="userPassword" class="control-label"></label>
                <input asp-for="userPassword" class="form-control" type="password" />
                @*<span asp-validation-for="userPassword" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <label asp-for="userConfirmpassword" class="control-label"></label>
                <input asp-for="userConfirmpassword" class="form-control" type="password" />
                @*<span asp-validation-for="userConfirmpassword" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <label asp-for="userEmail" class="control-label"></label>
                <input asp-for="userEmail" type="email" class="form-control" />
                @*<span asp-validation-for="userEmail" class="text-danger"></span>*@
            </div>
            <div class="form-group genderclass">
                <label asp-for="gender" class="control-label"></label>
                @*<input asp-for="Gender" class="form-control" />*@

                <input type="radio" name="Gender" value="M" />Male
                <input type="radio" name="Gender" value="F" />Female

                @*<span asp-validation-for="gender" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <label asp-for="dateOfBirth" class="control-label"></label>

                <input asp-for="dateOfBirth" class="form-control" />


                @*<span asp-validation-for="dateOfBirth" class="text-danger"></span>*@
            </div>

            <div class="form-group">
                <input type="submit" value="Save User Details" class="btn btn-primary"/>
            </div>
           
            <b>@ViewBag.message</b>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
    <button onclick="click1();">Display</button>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

<script>

    function click1() {
        swal("Here's the title!", "...and here's the text!");
    }
    $(document).ready(function () {
        $("input").keypress(function () {
            
        });
    });

    


    $(function () {
            $.validator.addMethod("noSpace", function (value, element) {
                return value == '' || value.trim().length != 0
            }, "Spaces are not allowed");

            jQuery.validator.addMethod("customEmail", function (value, element) {
                return this.optional(element) || /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(value);
            }, "Please enter valid email address!");

            jQuery.validator.addMethod("customPassword", function (value, element) {
                return this.optional(element) || /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@@#\$%\^&\*])(?=.{8,})/.test(value);
            }, "Please enter at least 1 lowercase case,uppercase,numeric, one special character and password must be eight characters or longer !");

            $.validator.addMethod("alphanumeric", function (value, element) {
                return this.optional(element) || /^\w+$/i.test(value);
            }, "Letters, numbers, and underscores only please");

            $.validator.addMethod("minAge", function (value, element, min) {
                var today = new Date();
                var birthDate = new Date(value);
                var age = today.getFullYear() - birthDate.getFullYear();

                if (age > min + 1) { return true; }

                var m = today.getMonth() - birthDate.getMonth();

                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) { age--; }

                return age >= min;
            }, "You are not old enough!");

            $("form[name = 'Registration']").validate({
                rules: {
                    userName: {
                        required: true,
                        noSpace: true,
                        alphanumeric: true,
                        rangelength: [3, 12]
                    },
                    userEmail: {
                        required: true,
                        customEmail: true

                    },
                    userPassword: {
                        required: true,
                        customPassword: true

                    },
                    userConfirmpassword: {
                        required: true,
                        equalTo: "#Password"
                    },
                    Gender:
                    {
                        required: true
                    },
                    dateOfBirth:
                    {
                        required: true,
                        minAge: 18
                    }
                },
                messages: {
                    userName: {
                        required: "Please enter username!",
                        rangelength: "Please enter a charater between 3 to 7 "
                    },
                    userEmail: {
                        required: "Please enter email!",
                        email: "please enter valid email"
                    },
                    userPassword: {
                        required: "Please enter password!",
                    },
                    userConfirmpassword: {
                        required: "Please enter confirm password!",
                        equalTo: "Please enter same password!"
                    },
                    Gender:
                    {
                        required: "Please select a gender"
                    },
                    dateOfBirth:
                    {
                        required: "Please select date of birth",
                        minAge: "You must be at least 18 years old!"
                    }
                },
                errorPlacement: function (error, element) {
                    if (element.is(":radio")) {
                        error.appendTo(element.parents(".genderclass"));
                    }
                    else {
                        error.insertAfter(element);
                    }
                },

                submitHandler: function (form) {
                    form.submit();
                }
            });
        });

    

   
    


</script>




